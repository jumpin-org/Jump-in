version: '3.4'

networks:
  backend:
    driver: bridge

services:
  jumpin-dbserver:
    image: ${DOCKER_REGISTRY-}jumpin-db
    build:
        context: .
        dockerfile: Database/StartUp/Dockerfile
    ports:
      - "1433:1433"
    volumes:
      - mssqldata:/var/opt/mssql
  gateway:
    container_name: gateway
    image: ${DOCKER_REGISTRY-}gateway
    build:
      context: .
      dockerfile: Gateway/JumpIn.Gateway/Dockerfile
  auth-api:
    container_name: auth-api
    image: ${DOCKER_REGISTRY-}auth-api
    build:
      context: .
      dockerfile: Services/Authentication/Authentication.API/Dockerfile
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - jumpin-dbserver
    environment:
        - DB_CONNECTION=Data Source=host.docker.internal;Initial Catalog=JumpIn;User ID=SA;Password=S3cur3P@ssW0rd!;TrustServerCertificate=true
  admin-api:
    container_name: admin-api
    image: ${DOCKER_REGISTRY-}admin-api
    build:
      context: .
      dockerfile: Services/Admin/Admin.API/Dockerfile
    depends_on:
      - jumpin-dbserver
    environment:
        - DB_CONNECTION=Data Source=host.docker.internal;Initial Catalog=JumpIn;User ID=SA;Password=S3cur3P@ssW0rd!;TrustServerCertificate=true
  auction-api:
    container_name: auction-api
    image: ${DOCKER_REGISTRY-}auction-api
    build:
      context: .
      dockerfile: Services/Auction/Auction.API/Dockerfile
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - jumpin-dbserver
    environment:
        - DB_CONNECTION=Data Source=host.docker.internal;Initial Catalog=JumpIn;User ID=SA;Password=S3cur3P@ssW0rd!;TrustServerCertificate=true

volumes:
  mssqldata:
